syntax = "proto3";
package ai_games.learn_settlers.com;

enum PlayerType {
    AI = 0;
    HUMAN = 1;
}

enum GamePhaseMessage {
    WAITING = 0;
    SETUP = 1;
    PLAY = 2;
    ENDED = 3;
}

enum TerrainMessage {
    Forest = 0;
    Clay = 1;
    Meadow = 2;
    Wheat = 3;
    Mountain = 4;
    Desert = 5;
    Water = 6;
    NONE = 7;
}

enum BuildingType {
    EMPTY = 0;
    SETTLEMENT = 1;
    CITY = 2;
    ROAD = 3;
    HARBOR = 4;
    HARBOR_SETTLEMENT = 5;
    HARBOR_CITY = 6;
}


message Hello {
    string version = 1;

}

message Welcome {
    string client_id = 1;
}

message Close {
    string client_id = 1;
    string version = 2;
}

message Join {
    string client_id = 1;
    string player_name = 2;
    PlayerType player_type = 3;
    optional int32 game_id = 4;
}

message CreateGame {
    int32 game_id = 1;
    string time = 2;
}

message StartGame {
    string client_id = 1;
    int32 game_id = 2;
}

message Error {
    string client_id = 1;
    string message = 2;
}

message TileMessage {
    int32 r = 1;
    int32 q = 2;
    TerrainMessage terrain = 3;
    int32 dice = 4;
}

message TileIdMessage {
    int32 r = 1;
    int32 q = 2;
}

message TileList{
    repeated TileMessage tiles = 1;
}

message BuildingMessage{
    int32 player_no =1;
    BuildingType building_type = 2;
    repeated int32 resources =3;
}

message CornerMessage{
    int32 id = 1;
    repeated TileIdMessage tiles = 2;
    BuildingMessage building = 3;
}

message EdgeMessage{
    int32 id = 1;
    repeated TileIdMessage tiles = 2;
    BuildingMessage building = 3;
}

message BoardMessage {
    repeated TileList tiles = 1;
    repeated CornerMessage corners = 2;
    repeated EdgeMessage edges = 3;
    repeated EdgeMessage harbors = 4;
}

message DevelopmentCard {
    int32 type = 1;
}

message PlayerStatsMessage {
    string player_name = 2;
    int32 victory_points = 3;
    repeated int32 resources = 4;
    repeated int32 development_cards = 5;
    repeated int32 blocked_dev_cards = 6;
    repeated int32 buildings = 7;
    int32 settlement_count = 8;
    int32 city_count = 9;
    repeated int32 roads = 10;
    repeated int32 trade_costs = 11;
    int32 knights = 12;
    bool longest_road = 13;
    bool largest_army = 14;
    bool dev_card_played = 15;
}


message GameStateMessage{
    int32 game_id = 2;
    GamePhaseMessage phase = 3;
    int32 turn = 4;
    int32 last_roll = 5;
    BoardMessage board = 6;
    repeated PlayerStatsMessage players = 7;
    int32 res_mult = 8;
    repeated int32 resources = 9;
    TileMessage robber = 11;
}

message BuildCornerMessage{
    CornerMessage corner = 1;
    BuildingType building_type = 2;
    bool free = 3;
}

message BuildEdgeMessage{
    EdgeMessage edge = 1;
    BuildingType building_type = 2;
    bool free = 3;
}

message DiceActionMessage{
    int32 dice_value=2;
}

message PhaseActionMessage{
    GamePhaseMessage game_phase = 1;
    repeated int32 vp_update = 2;
}

message RobberActionMessage{
    int32 robber_type = 1;
    TileMessage tile = 2;
    int32 target_player = 3;
}

message TradeActionMessage{
    int32 target_player = 2;
    repeated int32 out_resources = 3;
    repeated int32 in_resources = 4;
}

message CardActionMessage{
    bool draw = 1;
    int32 card_type = 2;
}

message RoadChangeMessage{
    int32 no_old = 1;
    int32 no_new = 2;
}

message DiscardMessage{
    int32 discard_count = 1;
    repeated int32 out_resources = 2;
}

message ActionMessage{
    int32 player_no=1;
    oneof action{
        BuildCornerMessage build_corner = 2;
        BuildEdgeMessage build_edge = 3;
        DiceActionMessage dice_action = 4;
        PhaseActionMessage phase_action = 5;
        RobberActionMessage robber_action = 6;
        TradeActionMessage trade_action = 7;
        CardActionMessage card_action = 8;
        RoadChangeMessage road_change = 9;
        bool pass_action = 10;
        bool decline_action = 11;
        DiscardMessage discard_action = 12;
    }
}

message ActionListMessage{
    repeated ActionMessage actions = 1;
}

message MyMessage {
    string client_id = 1;
    int32 game_id = 2;
    oneof payload{
        Hello hello = 3;
        Welcome welcome = 4;
        Close close = 5;
        Join join = 6;
        StartGame start_game = 7;
        CreateGame create_game = 8;
        Error error = 9;
        GameStateMessage game_state = 10;
        ActionMessage action = 11;
        ActionListMessage action_request = 12;
    }
}

